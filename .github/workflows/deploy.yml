name: Deploy to Google Compute Engine

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: tropical-cloud-detection
  ZONE: asia-southeast1-a
  INSTANCE_NAME: tropical-cloud-app

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
        
    - name: Configure gcloud
      run: |
        gcloud config set project ${{ env.PROJECT_ID }}
        gcloud config set compute/zone ${{ env.ZONE }}
        
    - name: Create deployment package
      run: |
        echo "üì¶ Creating deployment package..."
        tar -czf app.tar.gz --exclude='.git' --exclude='venv' --exclude='__pycache__' --exclude='*.pyc' .
        echo "‚úÖ Package created: $(ls -lh app.tar.gz)"
        
    - name: Upload to Cloud Storage
      run: |
        echo "üì§ Uploading to Cloud Storage..."
        gsutil cp app.tar.gz gs://tropical-cloud-detection-uploads/deployment/app.tar.gz
        echo "‚úÖ Upload completed"
        
    - name: Create systemd service file
      run: |
        echo "üìù Creating systemd service file..."
        cat > tropical-cloud.service << 'EOF'
[Unit]
Description=Tropical Cloud Detection Application
After=network.target

[Service]
Type=simple
User=alwaysneerudj_gmail_com
Group=alwaysneerudj_gmail_com
WorkingDirectory=/opt/tropical-cloud-detection
Environment=PATH=/opt/tropical-cloud-detection/venv/bin
ExecStart=/opt/tropical-cloud-detection/venv/bin/gunicorn --bind 127.0.0.1:8000 --workers 2 --timeout 600 --log-level warning cloud_detection_portal.wsgi:application
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF
        
    - name: Create nginx config file
      run: |
        echo "üìù Creating nginx config file..."
        cat > tropical-cloud-nginx.conf << 'EOF'
server {
  listen 8080;
  server_name _;
  client_max_body_size 200M;
  
  location /static/ {
    alias /opt/tropical-cloud-detection/staticfiles/;
  }
  
  location /media/ {
    alias /opt/tropical-cloud-detection/media/;
  }
  
  location / {
    proxy_pass http://127.0.0.1:8000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
EOF
        
    - name: Create startup script
      run: |
        echo "üìù Creating startup script..."
        cat > startup.sh << 'EOF'
#!/bin/bash
set -e

echo "üöÄ Starting deployment..."

# Download the latest code
gsutil cp gs://tropical-cloud-detection-uploads/deployment/app.tar.gz /tmp/app.tar.gz

# Setup directory
sudo mkdir -p /opt/tropical-cloud-detection
cd /opt/tropical-cloud-detection

# Extract files
sudo tar -xzf /tmp/app.tar.gz

# Install system dependencies
sudo apt-get update
sudo apt-get install -y python3 python3-pip python3-venv nginx build-essential libhdf5-dev libnetcdf-dev pkg-config

# Create virtual environment
sudo python3 -m venv venv

# Install Python packages
source venv/bin/activate
sudo venv/bin/pip install -r requirements.txt

# Run migrations
sudo venv/bin/python manage.py migrate

# Collect static files
sudo venv/bin/python manage.py collectstatic --noinput

# Stop existing processes
echo "üßπ Cleaning up existing processes..."
sudo pkill -f gunicorn || true
sudo systemctl stop tropical-cloud || true
sudo systemctl disable tropical-cloud || true
sleep 3

# Copy systemd service file
sudo cp tropical-cloud.service /etc/systemd/system/

# Set permissions
sudo chown -R alwaysneerudj_gmail_com:alwaysneerudj_gmail_com /opt/tropical-cloud-detection

# Start service
echo "üöÄ Starting systemd service..."
sudo systemctl daemon-reload
sudo systemctl enable tropical-cloud
sudo systemctl start tropical-cloud

# Wait for service
echo "‚è≥ Waiting for service to start..."
for i in {1..30}; do
  if curl -s http://127.0.0.1:8000/ > /dev/null 2>&1; then
    echo "‚úÖ Service is ready"
    break
  fi
  sleep 2
done

# Setup Nginx
echo "üîß Setting up Nginx..."
sudo cp tropical-cloud-nginx.conf /etc/nginx/sites-available/tropical-cloud-detection
sudo ln -sf /etc/nginx/sites-available/tropical-cloud-detection /etc/nginx/sites-enabled/
sudo rm -f /etc/nginx/sites-enabled/default
sudo systemctl restart nginx

echo "‚úÖ Deployment completed!"
EOF
        
    - name: Upload files to Cloud Storage
      run: |
        echo "üì§ Uploading files to Cloud Storage..."
        gsutil cp startup.sh gs://tropical-cloud-detection-uploads/deployment/startup.sh
        gsutil cp tropical-cloud.service gs://tropical-cloud-detection-uploads/deployment/tropical-cloud.service
        gsutil cp tropical-cloud-nginx.conf gs://tropical-cloud-detection-uploads/deployment/tropical-cloud-nginx.conf
        echo "‚úÖ Files uploaded"
        
    - name: Execute deployment
      run: |
        echo "üöÄ Executing deployment on VM..."
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --command="gsutil cp gs://tropical-cloud-detection-uploads/deployment/startup.sh /tmp/startup.sh && gsutil cp gs://tropical-cloud-detection-uploads/deployment/tropical-cloud.service /tmp/tropical-cloud.service && gsutil cp gs://tropical-cloud-detection-uploads/deployment/tropical-cloud-nginx.conf /tmp/tropical-cloud-nginx.conf && chmod +x /tmp/startup.sh && /tmp/startup.sh"
        
    - name: Wait for services
      run: |
        echo "‚è≥ Waiting for services to start..."
        sleep 30
        
    - name: Test application
      run: |
        echo "üîç Testing application..."
        EXTERNAL_IP=$(gcloud compute instances describe tropical-cloud-app --zone=asia-southeast1-a --format="value(networkInterfaces[0].accessConfigs[0].natIP)")
        echo "üåê Testing URL: http://$EXTERNAL_IP:8080/"
        
        # Test with detailed debugging
        curl -v -f http://$EXTERNAL_IP:8080/ || {
          echo "‚ùå Application test failed"
          echo "üîç Checking service status:"
          gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --command="sudo systemctl status tropical-cloud --no-pager" || echo "Service status failed"
          gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --command="ps aux | grep gunicorn" || echo "Process check failed"
          exit 1
        }
        
        echo "‚úÖ Application is responding!"
        
    - name: Final status
      run: |
        echo "üéâ Deployment completed successfully!"
        EXTERNAL_IP=$(gcloud compute instances describe tropical-cloud-app --zone=asia-southeast1-a --format="value(networkInterfaces[0].accessConfigs[0].natIP)")
        echo "üåê Application URL: http://$EXTERNAL_IP:8080"