name: Deploy to Google Compute Engine

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: tropical-cloud-detection
        
    - name: Debug - Check VM Status
      run: |
        echo "🔍 Checking VM status..."
        gcloud compute instances list --filter="name=tropical-cloud-app"
        echo "📊 VM details:"
        gcloud compute instances describe tropical-cloud-app --zone=asia-southeast1-a --format="table(name,status,machineType,networkInterfaces[0].accessConfigs[0].natIP)"
        
    - name: Debug - Check Firewall Rules
      run: |
        echo "🔍 Checking firewall rules..."
        gcloud compute firewall-rules list --filter="name~allow-http"
        
    - name: Create deployment package
      run: |
        echo "📦 Creating deployment package..."
        set -x
        
        # Create a clean directory for packaging
        mkdir -p /tmp/deploy
        cp -r . /tmp/deploy/
        cd /tmp/deploy
        
        # Remove unwanted files and directories
        rm -rf .git venv __pycache__ *.pyc .env* db.sqlite3* media staticfiles key.json gcp-github-actions*
        find . -name "*.pyc" -delete
        find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
        
        # Create tar archive from clean directory
        tar -czf /tmp/app.tar.gz .
        mv /tmp/app.tar.gz /home/runner/work/TropicalCloudDetection/TropicalCloudDetection/
        cd /home/runner/work/TropicalCloudDetection/TropicalCloudDetection/
        
        ls -la app.tar.gz
        echo "✅ Package created successfully"
        
    - name: Upload package to VM
      run: |
        echo "📤 Uploading to VM..."
        set -x
        gcloud compute scp app.tar.gz tropical-cloud-app:/tmp/app.tar.gz --zone=asia-southeast1-a --tunnel-through-iap
        echo "✅ Upload completed"
        
    - name: Setup VM directory
      run: |
        echo "🔧 Setting up VM directory..."
        set -x
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="sudo mkdir -p /opt/tropical-cloud-detection"
        echo "✅ Directory created"
        
    - name: Extract files
      run: |
        echo "📂 Extracting files..."
        set -x
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="cd /opt/tropical-cloud-detection && sudo tar -xzf /tmp/app.tar.gz"
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="ls -la /opt/tropical-cloud-detection"
        echo "✅ Files extracted"
        
    - name: Install system dependencies
      run: |
        echo "🐍 Installing system dependencies..."
        set -x
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="sudo apt-get update"
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="sudo apt-get install -y python3 python3-pip python3-venv nginx build-essential libhdf5-dev libnetcdf-dev pkg-config"
        echo "✅ System dependencies installed"
        
    - name: Create virtual environment
      run: |
        echo "🔧 Creating virtual environment..."
        set -x
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="cd /opt/tropical-cloud-detection && sudo python3 -m venv venv"
        echo "✅ Virtual environment created"
        
    - name: Install Python packages
      run: |
        echo "📦 Installing Python packages..."
        set -x
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="cd /opt/tropical-cloud-detection && source venv/bin/activate && sudo venv/bin/pip install -r requirements.txt"
        echo "✅ Python packages installed"
        
    - name: Run database migrations
      run: |
        echo "🗄️ Running database migrations..."
        set -x
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="cd /opt/tropical-cloud-detection && source venv/bin/activate && sudo venv/bin/python manage.py migrate"
        echo "✅ Migrations completed"
        
    - name: Collect static files
      run: |
        echo "📁 Collecting static files..."
        set -x
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="cd /opt/tropical-cloud-detection && source venv/bin/activate && sudo venv/bin/python manage.py collectstatic --noinput"
        echo "✅ Static files collected"
        
    - name: Stop existing processes
      run: |
        echo "🛑 Stopping existing processes..."
        set -x
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="sudo pkill -f gunicorn || echo 'No existing gunicorn processes found'"
        echo "✅ Processes stopped"
        
    - name: Start Gunicorn
      run: |
        echo "🚀 Starting Gunicorn..."
        set -x
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="cd /opt/tropical-cloud-detection && source venv/bin/activate && nohup sudo venv/bin/gunicorn --bind 127.0.0.1:8000 --workers 4 --timeout 600 cloud_detection_portal.wsgi:application > gunicorn.log 2>&1 &"
        echo "⏳ Waiting for Gunicorn to start..."
        sleep 10
        echo "🔍 Checking Gunicorn status:"
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="ps aux | grep gunicorn"
        echo "📊 Gunicorn logs:"
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="tail -n 20 /opt/tropical-cloud-detection/gunicorn.log"
        echo "✅ Gunicorn started"
        
    - name: Setup Nginx
      run: |
        echo "🌐 Setting up Nginx..."
        set -x
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="echo 'server { listen 8080; server_name _; client_max_body_size 200M; location /static/ { alias /opt/tropical-cloud-detection/staticfiles/; } location /media/ { alias /opt/tropical-cloud-detection/media/; } location / { proxy_pass http://127.0.0.1:8000; proxy_set_header Host \$host; proxy_set_header X-Real-IP \$remote_addr; proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for; } }' | sudo tee /etc/nginx/sites-available/tropical-cloud-detection"
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="sudo ln -sf /etc/nginx/sites-available/tropical-cloud-detection /etc/nginx/sites-enabled/"
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="sudo rm -f /etc/nginx/sites-enabled/default"
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="sudo nginx -t"
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="sudo systemctl restart nginx"
        echo "✅ Nginx configured"
        
    - name: Debug - Check services
      run: |
        echo "🔍 Checking service status..."
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="sudo systemctl status nginx --no-pager"
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="ps aux | grep gunicorn"
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="netstat -tlnp | grep :8000"
        gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="netstat -tlnp | grep :8080"
        
    - name: Test application
      run: |
        echo "🔍 Testing application..."
        set -x
        EXTERNAL_IP=$(gcloud compute instances describe tropical-cloud-app --zone=asia-southeast1-a --format="value(networkInterfaces[0].accessConfigs[0].natIP)")
        echo "🌐 Testing URL: http://$EXTERNAL_IP:8080/"
        
        # Test with curl and capture detailed output
        curl -v -f http://$EXTERNAL_IP:8080/ || {
          echo "❌ Application test failed"
          echo "🔍 Checking Gunicorn logs:"
          gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="tail -n 50 /opt/tropical-cloud-detection/gunicorn.log"
          echo "🔍 Checking Nginx logs:"
          gcloud compute ssh tropical-cloud-app --zone=asia-southeast1-a --tunnel-through-iap --command="sudo tail -n 50 /var/log/nginx/error.log"
          exit 1
        }
        
        echo "✅ Application is responding!"
        
    - name: Final status
      run: |
        echo "🎉 Deployment completed successfully!"
        EXTERNAL_IP=$(gcloud compute instances describe tropical-cloud-app --zone=asia-southeast1-a --format="value(networkInterfaces[0].accessConfigs[0].natIP)")
        echo "🌐 Application URL: http://$EXTERNAL_IP:8080"
        echo "📊 Logs: ssh tropical-cloud-app 'tail -f /opt/tropical-cloud-detection/gunicorn.log'"